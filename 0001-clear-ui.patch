From 2fda211892e70fd8b00bb32b10192481fe5db32f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Santiago=20C=C3=A9zar?= <santiagocezar2013@gmail.com>
Date: Fri, 5 Jul 2024 18:32:56 -0300
Subject: [PATCH] clear ui

---
 src/app.html                      |  3 ++
 src/routes/rgb-check/+page.svelte | 83 +++++++++++++++++++++----------
 2 files changed, 59 insertions(+), 27 deletions(-)

diff --git a/src/app.html b/src/app.html
index 42e54d7..b4d5960 100644
--- a/src/app.html
+++ b/src/app.html
@@ -1,3 +1,4 @@
+<! DOCTYPE html>
 <html lang="en">
 	<head>
 		<meta charset="utf-8" />
@@ -27,6 +28,8 @@
 		</style>
 	</head>
 	<body>
+		<div style="display: contents">
 		%sveltekit.body%
+		</div>
 	</body>
 </html>
diff --git a/src/routes/rgb-check/+page.svelte b/src/routes/rgb-check/+page.svelte
index ec5f179..793c3b1 100644
--- a/src/routes/rgb-check/+page.svelte
+++ b/src/routes/rgb-check/+page.svelte
@@ -1,23 +1,31 @@
 <script lang="ts">
 
-let refColor = $state([255, 255, 255])
+let refColor = $state([0,0,0])
 
 let color1 = $state([255, 255, 255])
 let color2 = $state([255, 255, 255])
 
+function deltaC([r1, g1, b1], [r2, g2, b2]) {
+    const rm = (r1 + r2) / 2
+    const { sqrt, pow } = Math
+    return sqrt(
+        (2 + rm / 256) * pow(r2-r1, 2) +
+        4 * pow(g2-g1, 2) +
+        (2 + (255-rm) / 256) * pow(b2-b1, 2)
+    )
+}
+
+const MAX_DELTA_C = deltaC([0, 0, 0], [255, 255, 255])
+
 function distanceRGB(colorA, colorB) {
-    return (100 - Math.sqrt(
-        Math.pow(colorB[0] - colorA[0], 2) +
-        Math.pow(colorB[1] - colorA[1], 2) +
-        Math.pow(colorB[2] - colorA[2], 2)
-    ) / 442 * 100).toFixed(2) + "%"
+    return 100 - 100 * deltaC(colorA, colorB) / MAX_DELTA_C
 }
 
 let dist1 = $derived.by(() => {
-    return distanceRGB(color1, refColor)
+    return distanceRGB(color1, refColor).toFixed(2) + "%"
 })
 let dist2 = $derived.by(() => {
-    return distanceRGB(color2, refColor)
+    return distanceRGB(color2, refColor).toFixed(2) + "%"
 })
 
 function randomize() {
@@ -30,12 +38,13 @@ function randomize() {
 
 {#snippet block(color, dist)}
     <div class="block" style={`--c: rgb(${color.join(',')});`}>
-        <h1>
-            {dist}
-        </h1>
+        <div class="closeness">
+            <h2>parecido:</h2>
+            <h1>{dist}</h1>
+        </div>
         <div class="inputs">
             {#each color as comp, i}
-                <input type="number" min="0" max="255" bind:value={color[i]}>
+                <input class={"component-"+i} type="number" min="0" max="255" bind:value={color[i]}>
             {/each}
         </div>
     </div>
@@ -44,7 +53,7 @@ function randomize() {
 <div class="rgb">
     {@render block(color1, dist1)}
     <button onclick={randomize} class="block" style={`--c: rgb(${refColor.join(',')});`}>
-        Elegir
+        Aleatorio
     </button>
     {@render block(color2, dist2)}
 </div>
@@ -53,14 +62,16 @@ function randomize() {
 .rgb {
     flex-grow: 1;
     display: flex;
+    font-family: Poppins, sans-serif;
 }
 
 .block {
     flex: 1 1;
     padding: 3vh;
-    display: flex;
+    display: grid;
+    grid-template-rows: 1fr auto;
     flex-direction: column;
-    align-items: center;
+    place-items: center;
     background-color: var(--c);
 }
 
@@ -69,23 +80,27 @@ button.block {
     place-content: end center;
     border: unset;
     color: white;
-    font-family: Poppins, sans-serif;
     font-weight: 900;
-    font-size: 10vh;
+    font-size: 6vh;
     text-shadow: 0 1vh 2vh #0008
 }
 
-.block h1 {
-    display: flex;
+.closeness {
     text-align: center;
-    align-items: center;
-    justify-content: center;
-    flex-grow: 1;
-    color: white;
-    font-family: Poppins, sans-serif;
-    font-weight: 900;
+    box-shadow: 0 .5vh 1vh #0002;
+    justify-self: center;
+    border-radius: 2vh;
+    padding: 1vh 3vh 0 3vh;
+    background-color: white;
+}
+
+.closeness h1 {
+    font-weight: bold;
     font-size: 10vh;
-    text-shadow: 0 1vh 2vh #0008
+    font-family: monospace;
+}
+.closeness h2 {
+    font-size: 5vh;
 }
 
 .block .inputs {
@@ -94,6 +109,7 @@ button.block {
 }
 
 .block input {
+    --component: gray
     all: unset;
     font-family: monospace;
     width: 4ch;
@@ -103,8 +119,21 @@ button.block {
     appearance: textfield;
     z-index: 2;
     font-size: 5vh;
-    box-shadow: 0 1vh 2vh #0004;
+    box-shadow: 0 .5vh 1vh #0002;
     text-align: center;
+    border: .2vh solid var(--component);
+    border-bottom-width: .5vh;
+    background-image: linear-gradient(var(--component) -200%, #eee 50%, #fff)
+}
+
+.block input.component-0 {
+    --component: #f00;
+}
+.block input.component-1 {
+    --component: #0f0;
+}
+.block input.component-2 {
+    --component: #00f;
 }
 
 .block input::-webkit-inner-spin-button {
-- 
2.45.1.windows.1

